做题的第一步，就是读题

然后编程的第一步，就是处理程序输入。
重点是：将程序输入装进我们设计的程序结构中，方便后续处理。
当有些题目的输入较为复杂时，输入是第一道难关，挡掉很多人，或者浪费了大量考试时间来处理输入数据！


推荐：

C++

第一种：处理不包含空格的输入
cin >> Sval

第二种：处理包含空格的情况

getline(cin, StrVal, '\n')
getline(cin, StrVal)


回溯法
分析问题时，将分枝图和剪枝画出来，便于分析。
回溯算法事实上就是在一个树形问题上做深度优先遍历，因此首先需要把问题转换为树形问题。这里请大家一定要拿起纸和笔，模拟一下程序运行过程，把树形图画出来（这一点很重要）。


穷举法 —— 回溯法或者动态规划

回溯算法

简单粗暴，但是相应的，算法的效率非常低。
这个解法等同于全排列，所以时间复杂度是阶乘级别，非常高，
题目说了nums的大小n最多为 500，所以回溯算法肯定是不能通过所有测试用例的。